version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    # Läser variabler från .env för substitutions (Compose läser .env i projektroten).
    # Kräver lösenord: stoppar tidigt om DB_PASSWORD saknas.
    environment:
      POSTGRES_USER: ${DB_USER:-integration}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?Set DB_PASSWORD in .env}   # <-- krävs
      POSTGRES_DB: ${DB_NAME:-integrationdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - integration-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U integration -d integrationdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  activemq:
    image: rmohr/activemq:5.15.9
    container_name: activemq
    # Exponera endast webb-konsolen lokalt; applikationen når ActiveMQ-brokern via Docker-nätet (activemq:61616).
    ports:
      - "127.0.0.1:8161:8161"
    networks:
      - integration-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8161"]
      interval: 10s
      timeout: 5s
      retries: 5

  integration-app:
    image: igor88gomes/spring-boot-integration:latest
    container_name: integration-app
    # Läser DB_* och BROKER_* från .env in i containern (krävs av Spring)
    env_file:
      - .env                               # <-- lägg .env i projektroten
    depends_on:
      postgres:
        condition: service_healthy
      activemq:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs     # Loggfiler delas mellan container och värd
    networks:
      - integration-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  integration-net: