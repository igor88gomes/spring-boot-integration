# Sekretesskanning med Gitleaks
name: Secret Scan

on:
  push:
    branches: [ "main", "test" ]  # vilka branches som triggar vid push
    paths-ignore:
      - "**/*.md"
      - "docs/**"
  pull_request:
    branches: [ "main" ]  # Kör på pull requests riktade mot main (blockerar merge vid träffar)
  pull_request_target:
    branches: [ "main" ] # Kör även när PR öppnas av bot
  schedule:   # Veckovis säkerhetsnät: måndagar kl 03:00 UTC
    - cron: "0 3 * * 1"
  workflow_dispatch:

# Förhindrar överlappande körningar på samma gren
concurrency:
  group: secret-scan-${{ github.ref }}  # en kö per referens (branch/tag)
  cancel-in-progress: true              # avbryt pågående om en ny startar

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      security-events: write

    # Kör på vanliga PR eller när botten öppnar PR (pull_request_target)
    if: github.event_name == 'pull_request' || (github.event_name == 'pull_request_target' && github.actor == 'github-actions[bot]')

    steps:
      # Klonar källan; fetch-depth: 0 krävs för full historikskanning
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

        # PR: snabb skanning — blockerar merge om hemlighet hittas
      - name: Installera Gitleaks (PR)
        if: github.event_name == 'pull_request'
        run: |
          set -e
          V="8.18.4"
          curl -sSL "https://github.com/gitleaks/gitleaks/releases/download/v${V}/gitleaks_${V}_linux_x64.tar.gz" \
            | tar -xz
          sudo mv gitleaks /usr/local/bin/gitleaks
      - name: Gitleaks (PR - fast)
        if: github.event_name == 'pull_request'
        run: |
          gitleaks detect \
            --no-git --redact --verbose \
            --source . \
            -c .gitleaks.toml

      # Full skanning kräver CLI även här
      - name: Installera Gitleaks (full)
        if: github.event_name != 'pull_request'
        run: |
          set -e
          V="8.18.4"
          curl -sSL "https://github.com/gitleaks/gitleaks/releases/download/v${V}/gitleaks_${V}_linux_x64.tar.gz" \
            | tar -xz
          sudo mv gitleaks /usr/local/bin/gitleaks

        # Full skanning + generera SARIF (endast på push/schedule, inte PR)
      - name: Gitleaks (push/schedule - full, SARIF)
        if: github.event_name != 'pull_request'
        id: gitleaks_full
        continue-on-error: true   # fortsätt så vi kan ladda upp rapporten
        run: |
          gitleaks detect \
            --redact --verbose \
            --source . \
            -c .gitleaks.toml \
            --report-format sarif \
            --report-path gitleaks-results.sarif

      # Ladda upp SARIF till Security → Code scanning (endast på main)
      - name: Upload SARIF to Code scanning
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks-results.sarif

      # Misslyckas om skanningen hittade läckor
      - name: Fail on findings
        if: steps.gitleaks_full.outcome == 'failure'
        run: |
          echo "Gitleaks found secrets. Failing the job."
          exit 1

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
