name: Secret Scan

on:
  push:
    branches: [ "main", "test", "**feature/**" ]
    paths-ignore:
      - "**/*.md"    # ignorera markdown
      - "docs/**"    # ignorera dokumentation
  pull_request:
  schedule:
    - cron: "0 3 * * 1"   # måndag 03:00 UTC (veckovis säkerhetsnät)
  workflow_dispatch:       # manuell körning

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write   # behövs för att ladda upp SARIF
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # skanna hela git-historiken

      # Steg 1: Generera SARIF-rapport utan att faila jobben
      - name: Gitleaks (generate SARIF, do not fail)
        uses: gitleaks/gitleaks-action@v2
        with:
          # --exit-code 0 => kör klart och skriv SARIF även om det finns träffar
          args: "--config=.gitleaks.toml --report-format sarif --report-path gitleaks.sarif --exit-code 0 --redact --no-banner"

      # Steg 2: Ladda upp SARIF till GitHub Code Scanning
      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()   # ladda upp även om föregående steg hade findings
        with:
          sarif_file: gitleaks.sarif

      # (Valfritt) Steg 3: Enforce – faila om det finns hemligheter
      # Om du inte vill faila i portföljen, kommentera bort detta steg.
      - name: Gitleaks (enforce, fail on findings)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--config=.gitleaks.toml --redact --no-banner --exit-code 1"
