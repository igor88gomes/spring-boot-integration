# Sekretesskanning med Gitleaks
name: Secret Scan

on:
  # Kör på push till huvudgrenarna där du arbetar
  push:
    branches: [ "main", "test" ]  # vilka branches som triggar vid push
    paths-ignore:
      - "**/*.md"
      - "docs/**"
  # Kör på pull requests riktade mot main (blockerar merge vid träffar)
  pull_request:
    branches: [ "main" ]
  # Veckovis säkerhetsnät: måndagar kl 03:00 UTC
  schedule:
    - cron: "0 3 * * 1"
  # Möjliggör manuell körning från Actions-fliken
  workflow_dispatch:

# Förhindrar överlappande körningar på samma gren
concurrency:
  group: secret-scan-${{ github.ref }}  # en kö per referens (branch/tag)
  cancel-in-progress: true              # avbryt pågående om en ny startar

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    steps:
      # Klonar källan; fetch-depth: 0 krävs för full historikskanning
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # PR: snabb skanning (endast arbetskatalog, utan git-historik)
      # Syfte: snabb feedback och möjligheten att blockera merge direkt
      - name: Gitleaks (PR - fast)
        if: github.event_name == 'pull_request'   # kör enbart på PR-event
        uses: gitleaks/gitleaks-action@v2
        with:
          # Flaggor i citerad, flerradig sträng för robust YAML-parsning
          # Actionen anropar 'detect' internt; här skickas endast flaggor
          args: >-
            --no-git --redact --verbose
            --source .
            --config-path=.gitleaks.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # krävs för PR-autentisering

      # Push/schedule: fullständig skanning (med git-historik)
      # Syfte: djupare kontroll efter merge och vid schemalagda körningar
      - name: Gitleaks (push/schedule - full)
        if: github.event_name != 'pull_request'     # kör ej på PR-event
        uses: gitleaks/gitleaks-action@v2
        with:
          args: >-
            --redact --verbose
            --source .
            --config-path=.gitleaks.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
