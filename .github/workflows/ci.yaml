# .github/workflows/ci.yaml
name: Java CI with Maven

on:
  push:
    branches: [ main, test ]    # Kör tester när man pushar till både main och test
  pull_request:
    branches: [ main ]          # Blockerar merge till main om CI inte är grön

concurrency:
  group: ci-${{ github.ref }}   # Avbryt äldre körningar på samma gren
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      - name: Build & test (JaCoCo)
        run: mvn -B clean verify

      # Kontroll: JaCoCo-rapport finns och är läsbar (HTML)
      - name: Kontrollera JaCoCo (HTML)
        id: jacoco_check
        if: always()
        run: |
          set -euo pipefail
          FILE="target/site/jacoco/index.html"
          if [ -s "$FILE" ] && grep -qi "jacoco" "$FILE"; then
            echo "has=true" >> "$GITHUB_OUTPUT"
          else
            echo "has=false" >> "$GITHUB_OUTPUT"
          fi

      # Ladda upp JaCoCo-rapport (14 dagar) – endast om giltig
      - name: Ladda upp JaCoCo-rapport (14 dagar)
        if: always() && steps.jacoco_check.outputs.has == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/**
          retention-days: 14

      # Logg om upload hoppas över
      - name: Hoppa över upload (JaCoCo saknas/ogiltig)
        if: always() && steps.jacoco_check.outputs.has != 'true'
        run: echo "JaCoCo saknas/ogiltig; hoppar över upload."

      # ---- Flagga: ska vi generera JavaDoc? (endast push→main med "[javadoc]" i commit) ----
      - name: Set JavaDoc flag
        id: jdoc
        shell: bash
        run: |
          # Logga händelsetyp, ref och commit-meddelande (för felsökning)
          set -euo pipefail
          echo "event=${{ github.event_name }}"
          echo "ref=${{ github.ref }}"
          echo "msg=${{ github.event.head_commit.message }}"
          # Standard: generera INTE javadoc
          JDOC=false
          # Aktivera endast vid push till main OCH när commit-meddelandet innehåller "[javadoc]"
          if [ "${{ github.event_name }}" = "push" ] \
             && [ "${{ github.ref }}" = "refs/heads/main" ] \
             && [[ "${{ github.event.head_commit.message }}" == *"[javadoc]"* ]]; then
            JDOC=true
          fi
          # Exportera flaggan till efterföljande steg
          echo "enabled=$JDOC" >> "$GITHUB_OUTPUT"

      # JavaDocs: kör endast när flaggan är sann
      - name: Generera JavaDocs
        if: steps.jdoc.outputs.enabled == 'true'
        run: mvn -B -DskipTests javadoc:javadoc

      # Kontroll: verifiera att apidocs faktiskt genererades
      - name: Kontrollera JavaDocs
        id: javadoc_check
        if: steps.jdoc.outputs.enabled == 'true'
        run: |
          if [ -d target/site/apidocs ] && [ "$(ls -A target/site/apidocs)" ]; then
            echo "has=true" >> "$GITHUB_OUTPUT"
          else
            echo "has=false" >> "$GITHUB_OUTPUT"
          fi

      # Ladda upp JavaDocs som artifact (endast om kontrollen lyckades)
      - name: Ladda upp JavaDocs (14 dagar)
        if: steps.jdoc.outputs.enabled == 'true' && steps.javadoc_check.outputs.has == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: javadocs
          path: target/site/apidocs/**
          retention-days: 14

      # Hoppa över upload om JavaDocs inte genererades (endast när flaggan är sann)
      - name: Hoppa över upload (JavaDocs saknas)
        if: steps.jdoc.outputs.enabled == 'true' && steps.javadoc_check.outputs.has != 'true'
        run: echo "JavaDocs saknas/ogiltiga; hoppar över upload."

      # Spring Cloud Contract: publicera stubs.jar som artifact (endast main)
      # Kontroll: finns och är icke-tom?
      - name: Kontrollera stubs (SCC)
        id: stubs_check
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          set -euo pipefail
          FILE=$(ls -1 target/*-stubs.jar 2>/dev/null | head -n1 || true)
          if [ -n "${FILE:-}" ] && [ -s "$FILE" ]; then
            echo "has=true" >> "$GITHUB_OUTPUT"
            echo "path=$FILE" >> "$GITHUB_OUTPUT"
            echo "Hittade stubs: $FILE"
          else
            echo "has=false" >> "$GITHUB_OUTPUT"
            echo "Inga stubs hittades i target/*-stubs.jar"
          fi

      - name: Ladda upp stubs (14 dagar)
        if: github.ref == 'refs/heads/main' && steps.stubs_check.outputs.has == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: stubs
          path: ${{ steps.stubs_check.outputs.path }}
          retention-days: 14

      - name: Hoppa över upload (stubs saknas/ogiltig)
        if: github.ref == 'refs/heads/main' && steps.stubs_check.outputs.has != 'true'
        run: echo "stubs saknas/ogiltig; hoppar över upload."

      # Felsökning: ladda upp testrapporter om bygget faller
      - name: Ladda upp Surefire-rapporter (endast vid fel)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: |
            target/surefire-reports/**
            target/failsafe-reports/**
            **/*-jvmRun*.dump
            **/*.dumpstream
          retention-days: 14
          if-no-files-found: ignore