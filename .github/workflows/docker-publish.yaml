# .github/workflows/docker-publish.yaml
name: Publish Docker image

on:
  # Publicera ENDAST när kod mergas/pushas till main
  push:
    branches:
      - main
  # Möjlighet att köra manuellt vid behov
  # workflow_dispatch:

env:
  # Ditt Docker Hub-repo (container registry), byt namespace/namn
  IMAGE_NAME: docker.io/igor88gomes/spring-boot-integration

jobs:
  build-and-push:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    # Aktivera miljö "production" i GitHub → Environments om du vill kräva manuell godkännande
    # environment: production

    steps:
      # Checka ut koden
      - name: Checka ut koden
        uses: actions/checkout@v4

      # Sätt upp JDK 17 för Maven-build (cache av lokala maven-dependencies)
      - name: Sätt upp JDK 17 (för Maven)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: maven

      # Bygg applikationen för att producera JAR (tester redan körda i CI, så vi skippar här)
      - name: Bygg applikationen (skippa tester i CD)
        run: mvn -B -DskipTests package

      # Ta fram kort SHA (för spårbar tag)
      - name: Hämta kort SHA för taggning
        id: vars
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # Logga in i Docker Hub med hemligheter från repo settings
      - name: Logga in på Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # Buildx krävs för cache och ev. multi-arch (bra att ha även om du bygger amd64)
      - name: Sätt upp Buildx
        uses: docker/setup-buildx-action@v3

      # Metadata/labels (för tydliga image-labels)
      - name: Metadata för Docker-image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}

      # Bygg och pusha: två taggar → latest (enkel konsumtion) + kort SHA (spårbarhet)
      - name: Bygg och pusha (latest + kort SHA)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.short_sha }}
          labels: ${{ steps.meta.outputs.labels }}
          # GitHub cache för snabbare inkrementella builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
